{"version":3,"sources":["components/profile/profileInfo/ProfileInfo.module.css","components/profile/myPosts/post/Post.module.css","components/profile/myPosts/MyPosts.module.css","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileDataForm.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/myPosts/post/Post.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","classes","ProfileInfo","savePhoto","saveProfile","descriptionBlock","alt","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likes","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","name","validate","required","placeholder","MyPosts","React","memo","postsElements","posts","reverse","post","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3ed606af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_dDl\",\"mainPhoto\":\"ProfileInfo_mainPhoto__GHdfX\",\"contact\":\"ProfileInfo_contact__PDsAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2CmLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3xtRD\",\"posts\":\"MyPosts_posts__1_rT9\"};","import React, {useEffect, useState} from 'react';\nimport s from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status] );\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  return (\n    <div>\n      { !editMode &&\n        <div>\n          <b>Status: </b><span onDoubleClick={ activateEditMode }>{props.status || \"------\"} </span>\n        </div>\n      }\n      { editMode &&\n        <div>\n          <input autoFocus={ true }\n                 onChange={ onStatusChange }\n                 onBlur={ deactivateEditMode }\n                 value={ status }\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport s from './ProfileInfo.module.css';\nimport {createField, Input, Textarea} from \"../../common/formsControls/formsControls\";\nimport {reduxForm} from \"redux-form\";\nimport style from \"../../common/formsControls/formsControls.module.css\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n  return <form onSubmit={ handleSubmit }>\n    <div><button>save</button></div>\n    { error && <div className={style.formSummaryError}>\n      {error}\n    </div>\n\n    }\n    <div>\n      <b>Full name</b>: { createField(\"Full name\", \"fullName\", [], Input) }\n    </div>\n\n    <div>\n      <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"}) }\n    </div>\n\n    <div>\n      <b>My professional skills</b>:\n      { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea) }\n    </div>\n\n    <div>\n      <b>About me</b>:\n      { createField(\"About me\", \"aboutMe\", [], Textarea) }\n    </div>\n\n    <div>\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n      return <div key={key} className={s.contact}>\n        <b>{key}: { createField(key, \"contacts.\" + key, [], Input) }</b>\n      </div>\n    })}\n    </div>\n  </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;\n","import React, { useState } from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../common/preloader/preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../assets/img/default_avatar.jpeg';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(\n      () => {\n        setEditMode(false);\n      }\n    );\n  }\n\n  return (\n    <div>\n      <div className={classes.descriptionBlock}>\n        <img alt='' src={profile.photos.large || userPhoto} className={classes.mainPhoto} />\n        { isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} /> }\n\n        { editMode\n            ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n            : <ProfileData goToEditMode={ () => {setEditMode(true)} } profile={profile} isOwner={isOwner} /> }\n\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  )\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return <>\n    { isOwner && <div><button onClick={goToEditMode}>edit</button></div> }\n    <div>\n      <b>Full name</b>: {profile.fullName}\n    </div>\n\n    <div>\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\n    </div>\n\n    <div>\n      <b>My professional skills</b>: {profile.lookingForAJobDescription}\n    </div>\n\n    <div>\n      <b>About me</b>: {profile.aboutMe}\n    </div>\n\n    <div>\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n      return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n    })}\n    </div>\n  </>\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n\n  return (\n    <div className={classes.item}>\n      <img alt='' src='https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fvignette1.wikia.nocookie.net%2Fjamescameronsavatar%2Fimages%2Ff%2Ffe%2FTypical_tsu%2527tey%2528mad_attitude%2529.jpg%2Frevision%2Flatest%3Fcb%3D20110624105006&f=1&nofb=1' />\n      {props.message}\n      <div>\n        <span>like</span><br />\n        <span>{props.likes}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport Post from './post/Post';\nimport classes from './MyPosts.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/formsControls/formsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={ props.handleSubmit }>\n      <div>\n        <Field component={Textarea}\n               name={\"newPostText\"}\n               validate={[required, maxLength10]}\n               placeholder=\"Add new post text\" />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nlet AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n  let postsElements =\n    [...props.posts]\n    .reverse()\n    .map(post => <Post key={post.id} message={post.message} likes={post.likes}/>);\n  // let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={classes.posts}>\n        {postsElements}\n      </div>\n    </div>\n  )\n});\n\nexport default MyPosts;\n","import React from \"react\";\nimport { addPostActionCreator } from \"../../../redux/profile.reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo savePhoto={props.savePhoto}\n                   isOwner={props.isOwner}\n                   profile={props.profile}\n                   status={props.status}\n                   saveProfile={props.saveProfile}\n                   updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile.reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile {...this.props}\n               isOwner={!this.props.match.params.userId}\n               profile={this.props.profile}\n               status={this.props.status}\n               updateStatus={this.props.updateStatus}\n               savePhoto={this.props.savePhoto} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status:  state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}