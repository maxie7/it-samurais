{"version":3,"sources":["components/profile/profileInfo/ProfileInfo.module.css","components/profile/myPosts/post/Post.module.css","components/profile/myPosts/MyPosts.module.css","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/myPosts/post/Post.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionBlock","alt","src","photos","large","Post","item","message","likes","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPosts","React","memo","postsElements","posts","reverse","map","post","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.46d0f225.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_dDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2CmLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3xtRD\",\"posts\":\"MyPosts_posts__1_rT9\"};","import React, {useEffect, useState} from 'react';\nimport s from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status] );\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  return (\n    <div>\n      { !editMode &&\n        <div>\n          <span  onDoubleClick={ activateEditMode }>{props.status || \"------\"} </span>\n        </div>\n      }\n      { editMode &&\n        <div>\n          <input autoFocus={ true }\n                 onChange={ onStatusChange }\n                 onBlur={ deactivateEditMode }\n                 value={ status }\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from \"../../common/preloader/preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n  if (!profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div>\n      <div className={classes.descriptionBlock}>\n        <img alt='' src={profile.photos.large} />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n\n  return (\n    <div className={classes.item}>\n      <img alt='' src='https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fvignette1.wikia.nocookie.net%2Fjamescameronsavatar%2Fimages%2Ff%2Ffe%2FTypical_tsu%2527tey%2528mad_attitude%2529.jpg%2Frevision%2Flatest%3Fcb%3D20110624105006&f=1&nofb=1' />\n      {props.message}\n      <div>\n        <span>like</span><br />\n        <span>{props.likes}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport Post from './post/Post';\nimport classes from './MyPosts.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/formsControls/formsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={ props.handleSubmit }>\n      <div>\n        <Field component={Textarea}\n               name={\"newPostText\"}\n               validate={[required, maxLength10]}\n               placeholder=\"Add new post text\" />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nlet AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm);\n\nconst MyPosts = React.memo(props => {\n  let postsElements =\n    [...props.posts]\n    .reverse()\n    .map(post => <Post message={post.message} likes={post.likes}/>);\n  // let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={classes.posts}>\n        {postsElements}\n      </div>\n    </div>\n  )\n});\n\nexport default MyPosts;","import React from \"react\";\nimport { addPostActionCreator } from \"../../../redux/profile.reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile.reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return (\n      <Profile {...this.props}\n               profile={this.props.profile}\n               status={this.props.status}\n               updateStatus={this.props.updateStatus} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status:  state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}