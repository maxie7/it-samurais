{"version":3,"sources":["components/dialogs/Dialogs.module.css","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/message/Message.jsx","components/dialogs/addMessageForm/AddMessageForm.jsx","components/dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","isAuth","dialogItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCYjKC,EATI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCDjBC,EAJC,SAACT,GACf,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,yCCCrCC,EAAcC,YAAiB,IAkBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAhBQ,SAACb,GACtB,OACE,0BAAMe,SAAUf,EAAMgB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBACLc,YAAY,wBAErB,6BACE,+CCiBOC,EA3BC,SAACvB,GAEf,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAvB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMqB,IAAKxB,EAAOH,GAAIA,GAAIG,EAAOH,QACzG4B,EAAmBN,EAAMO,SAASH,KAAK,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASmB,IAAKnB,EAAQR,QAMtG,OAAKF,EAAMgC,OAGT,yBAAK7B,UAAWC,IAAEuB,SAChB,yBAAKxB,UAAWC,IAAE6B,aACdP,GAGJ,yBAAKvB,UAAWC,IAAE2B,UAChB,6BAAMD,IAGR,kBAAC,EAAD,CAAgBf,SAhBA,SAACmB,GACnBlC,EAAMmC,YAAYD,EAAOE,oBAGD,kBAAC,IAAD,CAAU7B,GAAG,Y,wCCbrC8B,EAA6B,SAACb,GAAD,MAAY,CAC3CQ,OAAQR,EAAMc,KAAKN,S,OCeNO,sBACbC,aAfoB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACgB,GACxB,MAAO,CACLN,YAAa,SAACC,GACZK,EAASC,YAAmBN,UDPF,SAACO,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAK7C,MAAMgC,OACT,kBAACW,EAAcE,KAAK7C,OADI,kBAAC,IAAD,CAAUO,GAAG,eAHH,GACbuC,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCI5DL,CAGbhB","file":"static/js/4.c9a8c6f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3i6Ij\",\"dialogItems\":\"Dialogs_dialogItems__2HfOE\",\"active\":\"Dialogs_active__29h-a\",\"messages\":\"Dialogs_messages__1dMiD\",\"message\":\"Dialogs_message__3VF5g\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport s from './../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n  let path = '/dialogs/' + props.id;\n  return (\n    <div className={s.dialog + ' ' + s.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n  return <div className={s.message}>{props.message}</div>\n}\n\nexport default Message;","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/formsControls/formsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return(\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea}\n               validate={[required, maxLength50]}\n               name=\"newMessageBody\"\n               placeholder=\"Enter your message\" />\n      </div>\n      <div>\n        <button>Send22</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './dialogItem/DialogItem';\nimport Message from './message/Message';\nimport { Redirect } from \"react-router-dom\";\nimport AddMessageForm from './addMessageForm/AddMessageForm';\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\n  let messagesElements = state.messages.map( message => <Message message={message.message} key={message.id} /> );\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  }\n\n  if (!props.isAuth) return <Redirect to='/login' />;\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogItems}>\n        { dialogsElements }\n      </div>\n\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n\n      </div>\n      <AddMessageForm onSubmit={addNewMessage} />\n    </div>\n  )\n}\n\nexport default Dialogs;\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to='/login' />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}\n","import {sendMessageCreator} from \"../../redux/dialogs.reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}